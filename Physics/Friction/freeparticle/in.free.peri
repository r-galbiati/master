# PERIDYNAMIC MODEL OF A FREE PARTICLE
# March 27th, 2018
# PMMA particle moving

#--------------------------------------------------------------------------
# INITIALIZATION

units           si
boundary        p p p
atom_style      peri
atom_modify     map array
neighbor        0.0001 bin

#--------------------------------------------------------------------------
# PARAMETERS

# TIME
variable        t_step equal 1.0e-7
variable        time equal step*dt
variable        t_runsetup equal 3000
variable        t_skip equal 100

# PARTICLES
variable        latt equal 0.00025
variable        horizon equal "3*v_latt+0.0000001"
variable        dens equal 1180
variable        vol equal "(v_latt^3)"
variable        kboltz equal 1.38064852e-23

# FORCES
variable        forceLoadTot equal 5.0
variable        forcePushTot equal 1.0e-2

#--------------------------------------------------------------------------
# GEOMETRY SETUP

# TRIALBOX
lattice         sc ${latt}
region          trialbox block 0 20 0 20 0 20 units lattice
create_box      2 trialbox

# MOBILE BLOCKS
region          freeparticlePMMA block 3 3 10 10 10 10 units lattice
region          targetPMMA block 3 3 12 12 10 10 units lattice

# CREATE ATOMS
create_atoms    1 region freeparticlePMMA
create_atoms    2 region targetPMMA

# GROUPS
group           freeparticle region freeparticlePMMA
group           target region targetPMMA

#--------------------------------------------------------------------------
# POTENTIAL

pair_style      peri/pmb
pair_coeff      *   *       7.062e22           ${horizon}       0.0103    0.25

#--------------------------------------------------------------------------
# PROPERTIES SETUP 1

set             group all density ${dens}
set             group all volume ${vol}
velocity        all set 0.0 0.0 0.0 sum no units box
# all particles still

#--------------------------------------------------------------------------
# VARIABLES 1

# COUNTING
variable        ncount equal "count(freeparticle)"
variable        countall equal "count(all)"

# PUSHING
variable        forcePushEach equal "v_forcePushTot/(v_ncount+1e-99)*(1.0/v_vol)"
variable        forceRampPush equal "ramp(0.0,v_forcePushEach)"

#--------------------------------------------------------------------------
# FIXES 1

fix             F1 all nve
# particles trajectories

fix             F3 freeparticle addforce v_forcePushEach 0.0 0.0
# external push
fix_modify      F3 energy yes
# add external force to (potential) energy

# velocity        freeparticle set 5.0 0.0 0.0 sum yes units box

#--------------------------------------------------------------------------
# COMPUTES and VARIABLES

compute         C1 all ke
compute         C2 all pe
# explicit calculation of kinetic energy-potential energy


# Center-of-Mass position
compute         CM all com
variable        tempCMx equal c_CM[1]
variable        tempCMy equal c_CM[2]
variable        tempCMz equal c_CM[3]
# fix print needs a variable (not a compute)

# Center-of-Mass kinematics (upper specimen)
fix             FCM all print ${t_skip} "${time}    ${tempCMx}    ${tempCMy}    ${tempCMz}  " &
                file "CM.txt" screen "no" title "# Time, CM_x, CM_y, CM_z"

#--------------------------------------------------------------------------
# FIX PRINT

# Energies
variable        kenergy equal "c_C1*v_vol"
variable        penergy equal "c_C2*v_vol"
variable        totenergy equal "v_kenergy+v_penergy"

variable        temperature equal "(2.0*v_kenergy)/(3*v_countall*v_kboltz)"
# explicit calculation of the temperature of our system

# Print on "energy.txt"
fix             Fenergy all print ${t_skip} " ${time}    ${kenergy}    ${penergy}    ${totenergy} " &
                file "energy.txt" screen "no" title "# Time, kenergy, penergy, totenergy "

#--------------------------------------------------------------------------
# RUN

timestep        ${t_step}

# ON-SCREEN OUTPUT
thermo_style    custom step time v_temperature v_kenergy v_penergy v_totenergy
thermo          ${t_skip}

dump            D1 all custom ${t_skip} dump.peri id type x y z vx vy vz
dump	   	    D2 all image ${t_skip} image.*.jpg type type axes yes 0.8 0.02 view 80 -30 adiam 0.0006
dump_modify	    D2 pad 4

run             ${t_runsetup}

#--------------------------------------------------------------------------
